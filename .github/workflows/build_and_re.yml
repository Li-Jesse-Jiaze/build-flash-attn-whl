name: Build flash-attn wheel daily

on:
  schedule:
    - cron: "0 2 * * *"   # 每天 02:00 UTC 运行（欧洲/柏林为每日清晨）
  workflow_dispatch:

permissions:
  contents: write   # 创建/上传 Release 需要

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        shell: bash
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
          uv --version

      - name: Create venv & install nightly torch (cu126)
        shell: bash
        run: |
          set -euxo pipefail
          uv venv -p 3.12 --seed
          source .venv/bin/activate
          python -V
          # 安装指定源的 nightly torch（cu126）
          pip install --upgrade pip
          pip install --pre torch --index-url https://download.pytorch.org/whl/nightly/cu126

      - name: Build flash-attn wheel
        shell: bash
        env:
          MAX_JOBS: "4"
          FLASH_ATTENTION_FORCE_BUILD: "TRUE"
        run: |
          set -euxo pipefail
          source .venv/bin/activate
          mkdir -p wheelhouse
          # 可选：一些常见构建依赖
          pip install --upgrade build wheel setuptools packaging ninja cmake
          # 构建 wheel（无隔离，使用已装的 torch/cuda 环境）
          python -m pip wheel --no-build-isolation --no-deps flash-attn -w ./wheelhouse
          ls -lh wheelhouse

      - name: Compute versions for tag
        id: vers
        shell: bash
        run: |
          set -euo pipefail
          source .venv/bin/activate
          # 读取 torch 版本与 cuda 标记
          T_VERSION=$(python - <<'PY'
import torch, sys
print(torch.__version__)
PY
)
          CUDA_TAG=$(python - <<'PY'
import torch, sys
v = getattr(torch.version, "cuda", None)
print(("cu"+v.replace(".","")) if v else "cpu")
PY
)
          # 解析 wheelhouse 中的 flash-attn 版本（从文件名提取）
          FA_WHL=$(ls wheelhouse/flash_attn-*.whl | head -n1)
          FA_VERSION=$(python - <<'PY'
import os, re, sys
p = os.environ["FA_WHL"]
m = re.search(r"flash[_-]attn-([0-9][^ -]*)-", os.path.basename(p))
print(m.group(1) if m else "unknown")
PY
)
          TAG="torch-${T_VERSION}_flashattn-${FA_VERSION}_${CUDA_TAG}"
          echo "torch_version=${T_VERSION}" >> $GITHUB_OUTPUT
          echo "flashattn_version=${FA_VERSION}" >> $GITHUB_OUTPUT
          echo "cuda_tag=${CUDA_TAG}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Release tag will be: ${TAG}"

      - name: Create GitHub Release & upload wheels
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vers.outputs.tag }}
          name: ${{ steps.vers.outputs.tag }}
          body: |
            - torch: ${{ steps.vers.outputs.torch_version }}
            - flash-attn: ${{ steps.vers.outputs.flashattn_version }}
            - cuda: ${{ steps.vers.outputs.cuda_tag }}
          files: wheelhouse/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Also upload as workflow artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ steps.vers.outputs.tag }}
          path: wheelhouse/*.whl
