name: Daily Flash-Attention Build

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:12.6.0-devel-ubuntu22.04

    steps:
    - name: Install curl and dependencies
      run: |
        apt-get update
        apt-get install -y curl

    - name: Check today's PyTorch nightly (cu126)
      id: check
      run: |
        set -euo pipefail
        TODAY=$(date -u +%Y%m%d)  # 使用 UTC 日期
        BASE_URL="https://download.pytorch.org/whl/nightly/cu126/torch/"
        echo "Checking for torch nightly with date dev${TODAY} at: ${BASE_URL}"
        if curl -fsSL "$BASE_URL" | grep -E "torch-.*dev${TODAY}\+cu126.*\.whl" > /dev/null; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "Found torch nightly for dev${TODAY} (+cu126). Proceeding."
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "No torch nightly with dev${TODAY} (+cu126) found. Skipping build."
        fi

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv with retry mechanism
      run: |
        # 使用循环实现重试机制，应对网络问题
        max_attempts=5
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          echo "Attempt $attempt to install uv..."
          if curl -LsSf https://astral.sh/uv/install.sh | sh; then
            echo "uv installed successfully!"
            break
          fi
          echo "Attempt $attempt failed."
          if [ $attempt -eq $max_attempts ]; then
            echo "All attempts failed. Exiting."
            exit 1
          fi
          sleep 5
          attempt=$((attempt + 1))
        done
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Create virtual environment
      run: uv venv -p 3.12 --seed

    - name: Install PyTorch nightly
      run: |
        . .venv/bin/activate
        pip install --pre torch --index-url https://download.pytorch.org/whl/nightly/cu126

    - name: Build flash-attention wheel
      run: |
        . .venv/bin/activate
        mkdir -p wheelhouse
        MAX_JOBS=4 FLASH_ATTENTION_FORCE_BUILD=TRUE \
        python -m pip wheel --no-build-isolation --no-deps flash-attn -w ./wheelhouse

    - name: Get package versions
      id: versions
      run: |
        . .venv/bin/activate
        echo "TORCH_VERSION=$(python -c "import torch; print(torch.__version__)")" >> $GITHUB_OUTPUT
        echo "FLASH_ATTENTION_VERSION=$(python -c "import importlib.metadata; print(importlib.metadata.version('flash-attn'))")" >> $GITHUB_OUTPUT
        echo "CUDA_VERSION=cu126" >> $GITHUB_OUTPUT

    - name: Create tag name
      id: tag
      run: |
        TAG_NAME="${{ steps.versions.outputs.TORCH_VERSION }}+${{ steps.versions.outputs.FLASH_ATTENTION_VERSION }}+${{ steps.versions.outputs.CUDA_VERSION }}"
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        files: wheelhouse/*.whl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}